@inherits UmbracoTemplatePage

@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Umbraco.Web
@using HRI.Models
@using HRI.Controllers

@{  
    var changeEmailViewModel = new ChangeEmailViewModel();
    
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();    
}

@if (Convert.ToBoolean(TempData["IsSuccessful"]))
{
    var email = string.Format("<span id = \"currentEmail\" class=\"avenir-heavy purple\">{0}</span>", Membership.GetUser().Email);
    var message = Umbraco.Field("successMessage").ToString().Replace("@userEmail", email);
    @Html.Raw(message);
    return;
}

<h3>Update Email</h3>
<p>Your current email address: <span id="currentEmail" class="avenir-heavy purple">@Membership.GetUser().Email</span></p>

@using (Html.BeginUmbracoForm<MembersSurfaceController>("ChangeEmail"))
{
    <fieldset>
        @Html.ValidationSummary("changeEmailViewModel", true)
        @Html.AntiForgeryToken()

        @Html.Label("Password", changeEmailViewModel.Password)
        @Html.PasswordFor(m => changeEmailViewModel.Password)
        @Html.ValidationMessageFor(m => changeEmailViewModel.Password)

        @Html.Label("New Email", changeEmailViewModel.Email)
        @Html.TextBoxFor(m => changeEmailViewModel.Email)
        @Html.ValidationMessageFor(m => changeEmailViewModel.Email)

        @Html.Label("Confirm New Email", changeEmailViewModel.Email2)
        @Html.TextBoxFor(m => changeEmailViewModel.Email2)
        @Html.ValidationMessageFor(m => changeEmailViewModel.Email2)
            
        <input type="submit" value="Submit" class="btn hri-btn" />
    </fieldset>
}