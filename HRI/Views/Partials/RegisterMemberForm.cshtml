@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using HRI.Models
@using Umbraco.Web
@using HRI.Controllers
@inherits UmbracoTemplatePage

@{
    var registerModel = new RegisterFormViewModel();

    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.min.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.unobtrusive.min.js");

    if (TempData["PlanId"] != null)
    {
        registerModel.PlanId = TempData["PlanId"].ToString();
    }
    else if (ViewData["PlanId"] != null)
    {
        registerModel.PlanId = ViewData["PlanId"].ToString();
    }
    var isNewUser = !string.IsNullOrEmpty(registerModel.PlanId);
    var formClass = isNewUser || !ViewData.ModelState.IsValid ? string.Empty : "display: none;";
    var selectTypeClass = isNewUser || !ViewData.ModelState.IsValid ? "hri-hide" : string.Empty;
}

@Html.Raw(Html.RenderJsHere())

@using (Html.BeginUmbracoForm<RegisterSurfaceController>("HandleRegisterMember"))
{
    <fieldset>
    @Html.ValidationSummary("registerModel", true)

    <div class="row-fluid already-member">
        <div class="span3 offset9">
            Already registered? <a href="/for-members/login">Log in</a>
        </div>
    </div>
        <div class="row-fluid block select-type group @selectTypeClass">
            <div class="span5 desc"><h3>Select the option that best describes you.</h3></div>
            <div class="span5 selection">
                <label>
                    <input type="radio" name="user_type" id="user_type" value="register"> <span>I'm enrolled in a Health Republic Insurance plan.</span>
                    <span class="desc">This means you enrolled via NY State of Health, or: Via a paper application sent by mail or fax, or: You've recently received a bill from HRI via email or mail.</span>
                </label>

                <label>
                    <input type="radio" name="user_type" id="user_type" value="shop"> <span>I'd like to shop for a health insurance plan.</span>
                    <span class="desc">Please <a href="/shop-for-plans/compare-plans/">shop for plans here</a>. If you need help or have questions, please call 888.990.5702 M-F, 8:30p, - 5pm.</span>
                </label>

                <label class="last">
                    <input type="radio" name="user_type" id="user_type" value="provider"> <span>I'm a broker or healthcare provider.</span>
                    <span class="desc">Brokers, please visit our <a href="">broker page</a> for more info. Healcare providers, please visit our <a href="">provider page</a></span>
                </label>
            </div>
        </div>
    <div id="register-form" style="@formClass">
        <div class="row-fluid block group">
            <div class="span5 desc info">
                <h3>Please enter your information.</h3>
                @Umbraco.Field("Information")
            </div> 
            <div class="span3 @(isNewUser ? string.Empty : "hide")">
                @Html.Label("Social Security Number (optional)")
                @Html.TextBoxFor(m => registerModel.Ssn, new { @class = "short" })
                @Html.ValidationMessageFor(m => registerModel.Ssn)
            </div>

            <div class="span7 @(isNewUser ? "hide" : string.Empty)">
                @Html.Label("Member ID")
                @Html.TextBoxFor(m => registerModel.MemberId, new { @id = "memberId", maxlength = 9, @class = "short" })
                @Html.ValidationMessageFor(m => registerModel.MemberId)
                <div id="memberIdCheck"></div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span3 offset5 name">
                @Html.Label("First Name")
                @Html.TextBoxFor(m => registerModel.FirstName)
                @Html.ValidationMessageFor(m => registerModel.FirstName)
            </div>
            <div class="span3 name">
                @Html.Label("Last Name")
                @Html.TextBoxFor(m => registerModel.LastName)
                @Html.ValidationMessageFor(m => registerModel.LastName)
            </div>
        </div>
        <div class="row-fluid">
            <div class="span7 offset5">
                @Html.Label("Email")
                @Html.TextBoxFor(m => registerModel.Email)
                @Html.ValidationMessageFor(m => registerModel.Email)
            </div>
        </div>
        <div class="row-fluid">
            <div class="span7 offset5">
                @Html.Label("Confirm Email")
                @Html.TextBoxFor(m => registerModel.ConfirmEmail)
                @Html.ValidationMessageFor(m => registerModel.ConfirmEmail)
            </div>
        </div>
        <div class="row-fluid">
            <div class="span7 offset5">
                @Html.Label("Zip Code")
                @Html.TextBoxFor(m => registerModel.Zipcode)
                @Html.ValidationMessageFor(m => registerModel.Zipcode)
            </div>
        </div>
        <div class="row-fluid block">
            <div class="span5 desc"><h3>Create a username.</h3></div>
            <div class="span7">
                @Html.Label("Username")
                @Html.TextBoxFor(m => registerModel.Username, new { @id = "username" })
                @Html.ValidationMessageFor(m => registerModel.Username)
                <div id="userNameCheck"></div>
            </div>
        </div>

        <div class="row-fluid block">
            <div class="span5 desc">
                <h3>Create a password.</h3>
                <ul class="password-help">
                    <li>Password must be at least 8 characters long.</li>
                    <li>Contain 1 uppercase and 1 lowercase letter.</li>
                    <li>1 number or special character.</li>
                </ul>
            </div>
            <div class="span7">
                @Html.LabelFor(m => registerModel.Password)
                @Html.PasswordFor(m => registerModel.Password)
                @Html.ValidationMessageFor(m => registerModel.Password)
            </div>
        </div>
        <div class="row-fluid block">
            <div class="span5 desc"><h3>Optional.</h3></div>
            <div class="span7">
                @Html.Label("Phone Number")
                @Html.TextBoxFor(m => registerModel.Phone)
                @Html.ValidationMessageFor(m => registerModel.Phone)
            </div>
        </div>
            
        @Html.HiddenFor(m => registerModel.PlanId, new { value = registerModel.PlanId })
            
        <button class="btn cta cta-centered">Submit</button>
    </div>
</fieldset>
}

<script>
    // Check user uniqueness
    $("#username").keyup(function() {
        if ($('#username').val().length > 0) {
            $.ajax({
                url: "/umbraco/api/HriApi/IsUserNameAvailable",
                data: { username: $('#username').val() },
                success: function(data) {
                    if (data == 'true' && $('#username').val().length > 5)
                        $('#userNameCheck').html("<span class='success'>Username is available</span>");
                    else
                        $('#userNameCheck').html("<span class='error'>Username not available</span>");
                },
                error: function() { $('#userNameCheck').html("<span class='error'>Username not available</span>"); },
                dataType: 'html'
            });
        } else
            $('#userNameCheck').html('');
    });
</script>
