@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Umbraco.Web
@using Umbraco.Web.Models
@using HRI.Controllers

@inherits UmbracoTemplatePage

@{
    var loginModel = new LoginModel();
    var autoLogOff = Request["autologoff"] != null;
    
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@Html.Raw(Html.RenderJsHere())

@using (Html.BeginUmbracoForm<LoginSurfaceController>("HandleLogin"))
{
    <fieldset>
        <h3>Member Login</h3>
        @if (autoLogOff)
        {
            <div id="autologoff-message">
                In order to protect your account, you've been logged out automatically after 15 minutes of inactivity.
            </div>
        }
        @if (!ViewData.ModelState.IsValid)
        {
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary("loginModel", true).ToHtmlString()))
        }
        @Html.AntiForgeryToken()

        <div class="row-fluid">
            <div class="span5">@Html.LabelFor(m => loginModel.Username)</div>
            <div class="span7 text-right"><a href="~/for-members/forgot-username">Forgot Username?</a></div>
            @Html.TextBoxFor(m => loginModel.Username, new { id = "focus" })
            @Html.ValidationMessageFor(m => loginModel.Username)
        </div>

        <br />
        <div class="row-fluid">
            <div class="span5">@Html.LabelFor(m => loginModel.Password)</div>
            <div class="span7 text-right"><a href="~/for-members/forgot-password">Forgot Password?</a></div>
            @Html.PasswordFor(m => loginModel.Password)
            @Html.ValidationMessageFor(m => loginModel.Password)

        </div>

        <button class="btn hri-btn disable-after-click">Login</button>
    </fieldset>
}

<script>
    document.getElementById('focus').focus();
    $('#focus').keydown(function() {
        $('#autologoff-message').hide();
    });
</script>